name: Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            asset_name: dg-linux
          - os: macos-latest
            platform: macos
            asset_name: dg-macos
          - os: windows-latest
            platform: windows
            asset_name: dg-windows.exe

    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Install asciinema (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y asciinema

    - name: Install asciinema (macOS)
      if: runner.os == 'macOS'
      run: brew install asciinema

    - name: Install asciinema (Windows)
      if: runner.os == 'Windows'
      run: |
        # Windows users need to use WSL or alternative, we'll skip for binary
        echo "Skipping asciinema on Windows build"

    - name: Build Binary
      run: |
        # Build the binary for the current platform
        bun build ./src/index.ts --compile --outfile ${{ matrix.asset_name }}

    - name: Test Binary
      run: |
        # Basic smoke test
        ./${{ matrix.asset_name }} --version
        ./${{ matrix.asset_name }} --help

    - name: Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: |
          dg-linux
          dg-macos
          dg-windows.exe
        body: |
          ## DeepGuide CLI ${{ steps.get_version.outputs.VERSION }}

          ### Installation
          1. Download the appropriate binary for your platform
          2. Make it executable (Linux/macOS): `chmod +x dg-*`
          3. Move it to your PATH: `sudo mv dg-* /usr/local/bin/dg`

          ### Supported Platforms
          - Linux (x64)
          - macOS (x64, arm64)
          - Windows (x64)

          ### Dependencies
          - asciinema (required for recording demos)

          For full installation instructions, see the [documentation](https://github.com/deepguide/dg/blob/main/README.md). 