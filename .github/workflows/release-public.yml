name: Public Release

on:
  push:
    tags:
      - 'v*-public'  # Use tags like v1.0.0-public for public releases

jobs:
  # First job: Publish to public npm
  npm-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Build
      run: bun run build
    
    - name: Run tests
      run: |
        # Basic smoke tests before publishing
        node dist/index.js --help
        node dist/index.js --version
    
    - name: Setup npm auth for public registry
      run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
    
    - name: Publish to public npm
      run: npm publish --registry https://registry.npmjs.org --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Second job: Build executables for all platforms
  build-executables:
    runs-on: ubuntu-latest
    needs: npm-publish
    
    strategy:
      matrix:
        target:
          - { name: 'darwin-arm64', displayName: 'macOS (Apple Silicon)' }
          - { name: 'darwin-x64', displayName: 'macOS (Intel)' }
          - { name: 'linux-x64', displayName: 'Linux (x64)' }
          - { name: 'windows-x64', displayName: 'Windows (x64)' }
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Build executable for ${{ matrix.target.displayName }}
      run: bun run build:exe:${{ matrix.target.name }}
    
    - name: Prepare artifact name
      id: artifact
      run: |
        if [[ "${{ matrix.target.name }}" == "windows-x64" ]]; then
          echo "filename=dg-${{ matrix.target.name }}.exe" >> $GITHUB_OUTPUT
          mv dist/dg-${{ matrix.target.name }} dist/dg-${{ matrix.target.name }}.exe
        else
          echo "filename=dg-${{ matrix.target.name }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v4
      with:
        name: executable-${{ matrix.target.name }}
        path: dist/${{ steps.artifact.outputs.filename }}
        retention-days: 1

  # Third job: Create GitHub release with all executables
  github-release:
    runs-on: ubuntu-latest
    needs: [npm-publish, build-executables]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all executables
      uses: actions/download-artifact@v4
      with:
        path: ./executables
    
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract version from tag (remove -public suffix)
        VERSION=${GITHUB_REF#refs/tags/}
        CLEAN_VERSION=${VERSION%-public}
        
        # Create release
        gh release create "$VERSION" \
          --title "Release $CLEAN_VERSION (Public)" \
          --notes "## Changes
        
        See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        
        ## Installation Options
        
        ### ðŸ“¦ npm Package (Public)
        \`\`\`bash
        npm install -g @deepguide-ai/dg
        # or
        npx @deepguide-ai/dg init
        \`\`\`
        
        ### ðŸš€ Standalone Executables (No Dependencies)
        Download the appropriate executable for your platform:
        
        - **macOS (Apple Silicon)**: \`dg-darwin-arm64\`
        - **macOS (Intel)**: \`dg-darwin-x64\`  
        - **Linux (x64)**: \`dg-linux-x64\`
        - **Windows (x64)**: \`dg-windows-x64.exe\`
        
        Make executable and run:
        \`\`\`bash
        chmod +x dg-darwin-arm64  # macOS/Linux only
        ./dg-darwin-arm64 --help
        \`\`\`
        
        ## Quick Start
        
        \`\`\`bash
        dg init
        dg capture  
        dg generate
        \`\`\`" \
          ./executables/executable-darwin-arm64/dg-darwin-arm64 \
          ./executables/executable-darwin-x64/dg-darwin-x64 \
          ./executables/executable-linux-x64/dg-linux-x64 \
          ./executables/executable-windows-x64/dg-windows-x64.exe 